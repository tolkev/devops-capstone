---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml --out deployment.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: dnsauth
  name: dnsauth
spec:
  ports:
    - name: "5301"
      port: 5301
      targetPort: 53
    - name: 5301-udp
      port: 5301
      protocol: UDP
      targetPort: 53
    - name: "953"
      port: 953
      targetPort: 953
    - name: "53"
      port: 53
      targetPort: 53
    - name: "5353"
      port: 5353
      targetPort: 5353
  selector:
    io.kompose.service: dnsauth
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml --out deployment.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: dnsauth
  name: dnsauth
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: dnsauth
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml --out deployment.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/main-v4-v6: "true"
        io.kompose.service: dnsauth
    spec:
      containers:
        - env:
            - name: BIND9_USER
              value: bind
            - name: TZ
              value: EAT
          image: ocr2.devocp.safaricom.net/beaver-squad/dns_authoritative:v1
          name: dns-authoritative
          ports:
            - containerPort: 53
            - containerPort: 53
              protocol: UDP
            - containerPort: 953
            - containerPort: 5353
          resources: {}
          volumeMounts:
            - mountPath: /etc/bind
              name: dnsauth-claim0
      hostname: dns-authoritative
      restartPolicy: Always
      volumes:
        - name: dnsauth-claim0
          persistentVolumeClaim:
            claimName: dnsauth-claim0
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: dnsauth-claim0
  name: dnsauth-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: main-v4-v6
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/main-v4-v6: "true"
  podSelector:
    matchLabels:
      io.kompose.network/main-v4-v6: "true"

